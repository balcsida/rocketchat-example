# Upstreams
upstream backend {
    server app:3000;
}
# # Redirect Options
# server {
#     listen 80;
#     listen   [::]:80;
#     server_name ${NGINX_HOST};
#     access_log  off;

#     location / {
#         # CONFIRM CLOUDFLARE SSL IS SET TO FULL FOR THIS TO WORK
#         rewrite ^ https://$host$request_uri? permanent;
#     }
# }
# HTTPS Server
server {
    listen 443;
    server_name ${NGINX_HOST};

    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log debug;

    ssl off;
    ssl_certificate     /certs/certificate.crt;
    ssl_certificate_key /certs/certificate.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2; # donâ€™t use SSLv3 ref: POODLE
    ssl_session_cache  builtin:1000 shared:SSL:10m;

    proxy_buffering on;

    location / {
        proxy_pass http://app:3000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }
    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
        access_log off;
        expires 30d;

        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }
}
